Index: src/main/java/net/starly/shop/event/InventoryCloseListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package net.starly.shop.event;\r\n\r\nimport lombok.AllArgsConstructor;\r\nimport net.starly.core.jb.util.Pair;\r\nimport net.starly.shop.ShopMain;\r\nimport net.starly.shop.data.InventoryOpenMap;\r\nimport net.starly.shop.shop.ShopData;\r\nimport net.starly.shop.enums.InventoryOpenType;\r\nimport org.bukkit.Bukkit;\r\nimport org.bukkit.entity.Player;\r\nimport org.bukkit.event.EventHandler;\r\nimport org.bukkit.event.Listener;\r\nimport org.bukkit.event.inventory.InventoryCloseEvent;\r\nimport org.bukkit.inventory.Inventory;\r\n\r\n@AllArgsConstructor\r\npublic class InventoryCloseListener implements Listener {\r\n    private final InventoryOpenMap inventoryOpenMap;\r\n\r\n    @EventHandler\r\n    public void onInventoryClose(InventoryCloseEvent event) {\r\n        Player player = (Player) event.getPlayer();\r\n        if (player == null) return;\r\n        if (!inventoryOpenMap.has(player)) return;\r\n\r\n        InventoryOpenType openType = inventoryOpenMap.get(player).getFirst();\r\n        ShopData shopData = inventoryOpenMap.get(player).getSecond();\r\n        inventoryOpenMap.remove(player);\r\n\r\n        switch (openType) {\r\n            case ITEM_SETTING:\r\n            case ITEM_DETAIL_SETTING: {\r\n                if (openType == InventoryOpenType.ITEM_SETTING) {\r\n                    Inventory inv = event.getInventory();\r\n                    for (int i = 0; i < inv.getSize(); i++) shopData.setItem(i, inv.getItem(i));\r\n                }\r\n\r\n                Bukkit.getServer().getScheduler().runTaskLater(ShopMain.getPlugin(), () -> {\r\n                    player.openInventory(shopData.getShopSettingInv());\r\n                    inventoryOpenMap.set(player, new Pair<>(InventoryOpenType.SHOP_SETTING, shopData));\r\n                }, 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/net/starly/shop/event/InventoryCloseListener.java b/src/main/java/net/starly/shop/event/InventoryCloseListener.java
--- a/src/main/java/net/starly/shop/event/InventoryCloseListener.java	
+++ b/src/main/java/net/starly/shop/event/InventoryCloseListener.java	
@@ -2,7 +2,7 @@
 
 import lombok.AllArgsConstructor;
 import net.starly.core.jb.util.Pair;
-import net.starly.shop.ShopMain;
+import net.starly.shop.ShopPlusMain;
 import net.starly.shop.data.InventoryOpenMap;
 import net.starly.shop.shop.ShopData;
 import net.starly.shop.enums.InventoryOpenType;
@@ -35,7 +35,7 @@
                     for (int i = 0; i < inv.getSize(); i++) shopData.setItem(i, inv.getItem(i));
                 }
 
-                Bukkit.getServer().getScheduler().runTaskLater(ShopMain.getPlugin(), () -> {
+                Bukkit.getServer().getScheduler().runTaskLater(ShopPlusMain.getPlugin(), () -> {
                     player.openInventory(shopData.getShopSettingInv());
                     inventoryOpenMap.set(player, new Pair<>(InventoryOpenType.SHOP_SETTING, shopData));
                 }, 1);
Index: src/main/java/net/starly/shop/context/ConfigContent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package net.starly.shop.context;\r\n\r\nimport net.starly.core.data.Config;\r\nimport net.starly.shop.ShopMain;\r\n\r\npublic class ConfigContent {\r\n    private static ConfigContent instance;\r\n    private final Config config, msgConfig;\r\n\r\n    private ConfigContent() {\r\n        msgConfig = new Config(\"message\", ShopMain.getPlugin());\r\n        msgConfig.loadDefaultConfig();\r\n        msgConfig.setPrefix(\"prefix\");\r\n\r\n        config = new Config(\"config\", ShopMain.getPlugin());\r\n        if (!config.isFileExist()) new Config(\"shop/Example-Shop\", ShopMain.getPlugin()).loadDefaultConfig();\r\n        config.loadDefaultConfig();\r\n    }\r\n\r\n    public static ConfigContent getInstance() {\r\n        if (instance == null) instance = new ConfigContent();\r\n        return instance;\r\n    }\r\n\r\n    public Config getMsgConfig() {\r\n        return msgConfig;\r\n    }\r\n\r\n    public Config getConfig() {\r\n        return config;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/net/starly/shop/context/ConfigContent.java b/src/main/java/net/starly/shop/context/ConfigContent.java
--- a/src/main/java/net/starly/shop/context/ConfigContent.java	
+++ b/src/main/java/net/starly/shop/context/ConfigContent.java	
@@ -1,19 +1,19 @@
 package net.starly.shop.context;
 
 import net.starly.core.data.Config;
-import net.starly.shop.ShopMain;
+import net.starly.shop.ShopPlusMain;
 
 public class ConfigContent {
     private static ConfigContent instance;
     private final Config config, msgConfig;
 
     private ConfigContent() {
-        msgConfig = new Config("message", ShopMain.getPlugin());
+        msgConfig = new Config("message", ShopPlusMain.getPlugin());
         msgConfig.loadDefaultConfig();
         msgConfig.setPrefix("prefix");
 
-        config = new Config("config", ShopMain.getPlugin());
-        if (!config.isFileExist()) new Config("shop/Example-Shop", ShopMain.getPlugin()).loadDefaultConfig();
+        config = new Config("config", ShopPlusMain.getPlugin());
+        if (!config.isFileExist()) new Config("shop/Example-Shop", ShopPlusMain.getPlugin()).loadDefaultConfig();
         config.loadDefaultConfig();
     }
 
Index: src/main/java/net/starly/shop/ShopMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/net/starly/shop/ShopMain.java b/src/main/java/net/starly/shop/ShopPlusMain.java
rename from src/main/java/net/starly/shop/ShopMain.java
rename to src/main/java/net/starly/shop/ShopPlusMain.java
--- a/src/main/java/net/starly/shop/ShopMain.java	
+++ b/src/main/java/net/starly/shop/ShopPlusMain.java	
@@ -15,7 +15,7 @@
 import org.bukkit.plugin.RegisteredServiceProvider;
 import org.bukkit.plugin.java.JavaPlugin;
 
-public class ShopMain extends JavaPlugin {
+public class ShopPlusMain extends JavaPlugin {
     private static JavaPlugin plugin;
     private static Economy economy;
 
Index: src/main/java/net/starly/shop/shop/ShopUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package net.starly.shop.shop;\r\n\r\nimport net.starly.core.data.Config;\r\nimport net.starly.shop.ShopMain;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\n\r\npublic class ShopUtil {\r\n    public static ShopData getShopData(String name) {\r\n        return new ShopData(new Config(\"shop/\" + name, ShopMain.getPlugin()));\r\n    }\r\n\r\n    public static List<String> getShops() {\r\n        return new Config(\"shop/\", ShopMain.getPlugin()).getFileNames();\r\n    }\r\n\r\n    public static void createShop(String name, int line, String title) {\r\n        Config config = new Config(\"shop/\" + name, ShopMain.getPlugin());\r\n        config.setBoolean(\"shop.enabled\", false);\r\n        config.setString(\"shop.title\", title);\r\n        config.setInt(\"shop.size\", line * 9);\r\n        config.setObject(\"shop.items\", new HashMap<>());\r\n        config.setObject(\"shop.prices\", new HashMap<>());\r\n    }\r\n\r\n    public static void deleteShop(String name) {\r\n        Config config = new Config(\"shop/\" + name, ShopMain.getPlugin());\r\n        if (config.isFileExist()) config.delete();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/net/starly/shop/shop/ShopUtil.java b/src/main/java/net/starly/shop/shop/ShopUtil.java
--- a/src/main/java/net/starly/shop/shop/ShopUtil.java	
+++ b/src/main/java/net/starly/shop/shop/ShopUtil.java	
@@ -1,22 +1,22 @@
 package net.starly.shop.shop;
 
 import net.starly.core.data.Config;
-import net.starly.shop.ShopMain;
+import net.starly.shop.ShopPlusMain;
 
 import java.util.HashMap;
 import java.util.List;
 
 public class ShopUtil {
     public static ShopData getShopData(String name) {
-        return new ShopData(new Config("shop/" + name, ShopMain.getPlugin()));
+        return new ShopData(new Config("shop/" + name, ShopPlusMain.getPlugin()));
     }
 
     public static List<String> getShops() {
-        return new Config("shop/", ShopMain.getPlugin()).getFileNames();
+        return new Config("shop/", ShopPlusMain.getPlugin()).getFileNames();
     }
 
     public static void createShop(String name, int line, String title) {
-        Config config = new Config("shop/" + name, ShopMain.getPlugin());
+        Config config = new Config("shop/" + name, ShopPlusMain.getPlugin());
         config.setBoolean("shop.enabled", false);
         config.setString("shop.title", title);
         config.setInt("shop.size", line * 9);
@@ -25,7 +25,7 @@
     }
 
     public static void deleteShop(String name) {
-        Config config = new Config("shop/" + name, ShopMain.getPlugin());
+        Config config = new Config("shop/" + name, ShopPlusMain.getPlugin());
         if (config.isFileExist()) config.delete();
     }
 }
Index: src/main/resources/plugin.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>name: ST-Shop\r\nmain: net.starly.shop.ShopMain\r\nauthor: Starly Team\r\nwebsite: http://starly.kr/discord\r\n\r\ndescription: Shop Plugin.\r\n\r\nsoftdepend:\r\n  - ST-Core\r\n\r\nversion: 1.0\r\napi-version: 1.13\r\n\r\ncommands:\r\n  shop:\r\n    aliases: [ 상점 ]
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/plugin.yml b/src/main/resources/plugin.yml
--- a/src/main/resources/plugin.yml	
+++ b/src/main/resources/plugin.yml	
@@ -1,9 +1,9 @@
-name: ST-Shop
+name: ST-ShopPlus
 main: net.starly.shop.ShopMain
 author: Starly Team
 website: http://starly.kr/discord
 
-description: Shop Plugin.
+description: Shop+ Plugin.
 
 softdepend:
   - ST-Core
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>rootProject.name = 'ST-Shop'\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/settings.gradle b/settings.gradle
--- a/settings.gradle	
+++ b/settings.gradle	
@@ -1,2 +1,2 @@
-rootProject.name = 'ST-Shop'
+rootProject.name = 'ST-Shop+'
 
Index: src/main/java/net/starly/shop/event/InventoryClickListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package net.starly.shop.event;\r\n\r\nimport lombok.AllArgsConstructor;\r\nimport net.milkbowl.vault.economy.Economy;\r\nimport net.starly.core.data.Config;\r\nimport net.starly.core.jb.util.Pair;\r\nimport net.starly.core.jb.version.nms.tank.NmsItemStackUtil;\r\nimport net.starly.core.jb.version.nms.wrapper.ItemStackWrapper;\r\nimport net.starly.core.jb.version.nms.wrapper.NBTTagCompoundWrapper;\r\nimport net.starly.core.util.InventoryUtil;\r\nimport net.starly.shop.context.ConfigContent;\r\nimport net.starly.shop.data.ChatInputMap;\r\nimport net.starly.shop.data.InventoryOpenMap;\r\nimport net.starly.shop.enums.ButtonType;\r\nimport net.starly.shop.enums.ChatInputType;\r\nimport net.starly.shop.shop.ShopData;\r\nimport net.starly.shop.enums.InventoryOpenType;\r\nimport org.bukkit.Bukkit;\r\nimport org.bukkit.Material;\r\nimport org.bukkit.entity.Player;\r\nimport org.bukkit.event.EventHandler;\r\nimport org.bukkit.event.Listener;\r\nimport org.bukkit.event.inventory.ClickType;\r\nimport org.bukkit.event.inventory.InventoryClickEvent;\r\nimport org.bukkit.inventory.ItemStack;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.Objects;\r\nimport java.util.concurrent.atomic.AtomicInteger;\r\n\r\nimport static net.starly.shop.ShopMain.*;\r\n\r\n@AllArgsConstructor\r\npublic class InventoryClickListener implements Listener {\r\n    private final InventoryOpenMap inventoryOpenMap;\r\n    private final Economy economy;\r\n    private final ChatInputMap chatInputMap;\r\n\r\n    @EventHandler\r\n    public void onInventoryClick(InventoryClickEvent event) {\r\n        Player player = (Player) event.getWhoClicked();\r\n        if (player == null) return;\r\n        if (!inventoryOpenMap.has(player)) return;\r\n\r\n        Config msgConfig = ConfigContent.getInstance().getMsgConfig();\r\n        ItemStack currentStack = event.getCurrentItem();\r\n        int slot = event.getSlot();\r\n        Config config = ConfigContent.getInstance().getConfig();\r\n        ClickType clickType = event.getClick();\r\n        InventoryOpenType openType = inventoryOpenMap.get(player).getFirst();\r\n        ShopData shopData = inventoryOpenMap.get(player).getSecond();\r\n        event.setCancelled(true);\r\n\r\n        if (openType != InventoryOpenType.ITEM_SETTING && currentStack == null) return;\r\n\r\n        switch (openType) {\r\n            case SHOP: {\r\n                if (event.getClickedInventory() == player.getInventory()) return;\r\n\r\n                if (clickType.name().equals(config.getString(\"click.buy\"))) {\r\n                    if (shopData.getBuyPrice(slot) == -1) {\r\n                        player.sendMessage(msgConfig.getMessage(\"errorMessages.cannotBuyThisItem\"));\r\n                        return;\r\n                    }\r\n\r\n                    ItemStack originStack = shopData.getItem(slot);\r\n\r\n                    if (InventoryUtil.getSpace(player.getInventory()) - 5 < 1) {\r\n                        player.sendMessage(msgConfig.getMessage(\"errorMessages.inventorySpaceIsNotEnough\"));\r\n                        return;\r\n                    }\r\n\r\n                    if (economy.getBalance(player) < shopData.getBuyPrice(slot)) {\r\n                        player.sendMessage(msgConfig.getMessage(\"errorMessages.moneyIsNotEnough\"));\r\n                        return;\r\n                    }\r\n\r\n                    economy.withdrawPlayer(player, shopData.getBuyPrice(slot));\r\n                    player.getInventory().addItem(originStack);\r\n                    player.sendMessage(msgConfig.getMessage(\"messages.itemBuyed\").replace(\"{price}\", shopData.getBuyPrice(slot) + \"\").replace(\"{amount}\", 1 + \"\"));\r\n                } else if (clickType.name().equals(config.getString(\"click.buy-64\"))) {\r\n                    if (shopData.getBuyPrice(slot) == -1) {\r\n                        player.sendMessage(msgConfig.getMessage(\"errorMessages.cannotBuyThisItem\"));\r\n                        return;\r\n                    }\r\n\r\n                    ItemStack originStack = shopData.getItem(slot);\r\n\r\n                    if (economy.getBalance(player) < shopData.getBuyPrice(slot)) {\r\n                        player.sendMessage(msgConfig.getMessage(\"errorMessages.moneyIsNotEnough\"));\r\n                        return;\r\n                    } else if (InventoryUtil.getSpace(player.getInventory()) - 5 < 1) {\r\n                        player.sendMessage(msgConfig.getMessage(\"errorMessages.inventorySpaceIsNotEnough\"));\r\n                        return;\r\n                    }\r\n\r\n                    int totalPurchased = 0;\r\n                    for (int i = 0; i < 64; i++) {\r\n                        if (InventoryUtil.getSpace(player.getInventory()) - 5 < 1) break;\r\n                        if (economy.getBalance(player) < shopData.getBuyPrice(slot) * (totalPurchased + 1)) break;\r\n\r\n                        player.getInventory().addItem(originStack);\r\n                        totalPurchased++;\r\n                    }\r\n\r\n                    economy.withdrawPlayer(player, totalPurchased * shopData.getBuyPrice(slot));\r\n                    player.sendMessage(msgConfig.getMessage(\"messages.itemBuyed\").replace(\"{price}\", (shopData.getBuyPrice(slot) * totalPurchased) + \"\").replace(\"{amount}\", totalPurchased + \"\"));\r\n                } else if (clickType.name().equals(config.getString(\"click.sell\"))) {\r\n                    if (shopData.getSellPrice(slot) == -1) {\r\n                        player.sendMessage(msgConfig.getMessage(\"errorMessages.cannotSellThisItem\"));\r\n                        return;\r\n                    }\r\n\r\n                    ItemStack originStack = shopData.getItem(slot);\r\n\r\n                    if (Arrays.stream(player.getInventory().getContents()).filter(Objects::nonNull).noneMatch(originStack::equals)) {\r\n                        player.sendMessage(msgConfig.getMessage(\"errorMessages.noItemInInventory\"));\r\n                        return;\r\n                    }\r\n\r\n                    for (int i = 0; i < 36; i++) {\r\n                        ItemStack itemStack = player.getInventory().getItem(i);\r\n                        if (itemStack == null || itemStack.getType() == Material.AIR) continue;\r\n                        if (itemStack.getType() != originStack.getType()) continue;\r\n\r\n                        if (itemStack.getAmount() == 1) {\r\n                            player.getInventory().setItem(i, null);\r\n                        } else {\r\n                            itemStack.setAmount(itemStack.getAmount() - 1);\r\n                            player.getInventory().setItem(i, itemStack);\r\n                        }\r\n                        break;\r\n                    }\r\n\r\n                    economy.depositPlayer(player, shopData.getSellPrice(slot));\r\n                    player.sendMessage(msgConfig.getMessage(\"messages.itemSelled\").replace(\"{price}\", shopData.getSellPrice(slot) + \"\").replace(\"{amount}\", 1 + \"\"));\r\n                } else if (clickType.name().equals(config.getString(\"click.sell-64\"))) {\r\n                    if (shopData.getSellPrice(slot) == -1) {\r\n                        player.sendMessage(msgConfig.getMessage(\"errorMessages.cannotSellThisItem\"));\r\n                        return;\r\n                    }\r\n\r\n                    ItemStack originStack = shopData.getItem(slot);\r\n\r\n                    if (Arrays.stream(player.getInventory().getContents()).filter(Objects::nonNull).noneMatch(originStack::equals)) {\r\n                        player.sendMessage(msgConfig.getMessage(\"errorMessages.noItemInInventory\"));\r\n                        return;\r\n                    }\r\n\r\n                    AtomicInteger totalSelled = new AtomicInteger();\r\n                    Arrays.stream(player.getInventory().getContents()).filter(Objects::nonNull).filter(originStack::equals).forEach(s -> totalSelled.addAndGet(s.getAmount()));\r\n                    if (totalSelled.get() > 64) totalSelled.set(64);\r\n\r\n                    int totalRemoved = 0;\r\n                    for (int i = 0; i < 36; i++) {\r\n                        if (totalSelled.get() == totalRemoved) break;\r\n\r\n                        ItemStack itemStack = player.getInventory().getItem(i);\r\n                        if (itemStack == null || itemStack.getType() == Material.AIR) continue;\r\n                        if (itemStack.getType() != originStack.getType()) continue;\r\n\r\n\r\n                        if (itemStack.getAmount() == 64) {\r\n                            player.getInventory().setItem(i, null);\r\n                            totalRemoved += 64;\r\n                        } else if (itemStack.getAmount() == 1) {\r\n                            player.getInventory().setItem(i, null);\r\n                            totalRemoved++;\r\n                        } else {\r\n                            if (itemStack.getAmount() <= (totalSelled.get() - totalRemoved)) {\r\n                                totalRemoved += itemStack.getAmount();\r\n                                itemStack.setAmount(0);\r\n                            } else {\r\n                                totalRemoved += (totalSelled.get() - totalRemoved);\r\n                                itemStack.setAmount(itemStack.getAmount() - (totalSelled.get() - totalRemoved));\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    economy.depositPlayer(player, totalSelled.get() * shopData.getSellPrice(slot));\r\n                    player.sendMessage(msgConfig.getMessage(\"messages.itemSelled\").replace(\"{price}\", (totalSelled.get() * shopData.getSellPrice(slot)) + \"\").replace(\"{amount}\", totalSelled.get() + \"\"));\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            case SHOP_SETTING: {\r\n                ItemStack itemStack = event.getCurrentItem();\r\n                if (itemStack == null || itemStack.getType() == Material.AIR || !itemStack.hasItemMeta()) return;\r\n                ItemStackWrapper nmsStack = NmsItemStackUtil.getInstance().asNMSCopy(itemStack);\r\n                NBTTagCompoundWrapper nbtTagCompound = nmsStack.getTag();\r\n                if (nbtTagCompound == null) return;\r\n                ButtonType buttonType = ButtonType.valueOf(nbtTagCompound.getString(\"buttonId\"));\r\n\r\n                switch (buttonType) {\r\n                    case SHOP_ENABLED: {\r\n                        shopData.setEnabled(false);\r\n                        player.sendMessage(msgConfig.getMessage(\"messages.shopDisabled\"));\r\n\r\n                        Bukkit.getServer().getScheduler().runTaskLater(getPlugin(), () -> {\r\n                            player.openInventory(shopData.getShopSettingInv());\r\n                            inventoryOpenMap.set(player, new Pair<>(InventoryOpenType.SHOP_SETTING, shopData));\r\n                        }, 1);\r\n                        break;\r\n                    }\r\n\r\n                    case SHOP_DISABLED: {\r\n                        shopData.setEnabled(true);\r\n                        player.sendMessage(msgConfig.getMessage(\"messages.shopEnabled\"));\r\n\r\n                        Bukkit.getServer().getScheduler().runTaskLater(getPlugin(), () -> {\r\n                            player.openInventory(shopData.getShopSettingInv());\r\n                            inventoryOpenMap.set(player, new Pair<>(InventoryOpenType.SHOP_SETTING, shopData));\r\n                        }, 1);\r\n                        break;\r\n                    }\r\n\r\n                    case ITEM_SETTING: {\r\n                        Bukkit.getServer().getScheduler().runTaskLater(getPlugin(), () -> {\r\n                            player.openInventory(shopData.getItemSettingInv());\r\n                            inventoryOpenMap.set(player, new Pair<>(InventoryOpenType.ITEM_SETTING, shopData));\r\n                        }, 1);\r\n                        break;\r\n                    }\r\n\r\n                    case ITEM_DETAIL_SETTING: {\r\n                        Bukkit.getServer().getScheduler().runTaskLater(getPlugin(), () -> {\r\n                            player.openInventory(shopData.getItemDetailSettingInv());\r\n                            inventoryOpenMap.set(player, new Pair<>(InventoryOpenType.ITEM_DETAIL_SETTING, shopData));\r\n                        }, 1);\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n\r\n            case ITEM_SETTING: {\r\n                event.setCancelled(false);\r\n                break;\r\n            }\r\n\r\n            case ITEM_DETAIL_SETTING: {\r\n                if (event.getClickedInventory() == player.getInventory()) return;\r\n\r\n                if (clickType == ClickType.LEFT) {\r\n                    //판매가격\r\n                    Bukkit.getServer().getScheduler().runTaskLater(getPlugin(), () -> {\r\n                        inventoryOpenMap.remove(player);\r\n                        player.closeInventory();\r\n\r\n                        player.sendMessage(msgConfig.getMessage(\"messages.enterSellPrice\"));\r\n                        chatInputMap.set(player, new Pair<>(ChatInputType.SELL_PRICE, new Pair<>(shopData, slot)));\r\n                    }, 1);\r\n                } else if (clickType == ClickType.RIGHT) {\r\n                    //구매가격\r\n                    Bukkit.getServer().getScheduler().runTaskLater(getPlugin(), () -> {\r\n                        inventoryOpenMap.remove(player);\r\n                        player.closeInventory();\r\n\r\n                        player.sendMessage(msgConfig.getMessage(\"messages.enterBuyPrice\"));\r\n                        chatInputMap.set(player, new Pair<>(ChatInputType.BUY_PRICE, new Pair<>(shopData, slot)));\r\n                    }, 1);\r\n                } else if (clickType.isShiftClick()) {\r\n                    //삭제\r\n                    shopData.setItem(slot, null);\r\n                    event.getClickedInventory().setItem(slot, null);\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/net/starly/shop/event/InventoryClickListener.java b/src/main/java/net/starly/shop/event/InventoryClickListener.java
--- a/src/main/java/net/starly/shop/event/InventoryClickListener.java	
+++ b/src/main/java/net/starly/shop/event/InventoryClickListener.java	
@@ -28,7 +28,7 @@
 import java.util.Objects;
 import java.util.concurrent.atomic.AtomicInteger;
 
-import static net.starly.shop.ShopMain.*;
+import static net.starly.shop.ShopPlusMain.*;
 
 @AllArgsConstructor
 public class InventoryClickListener implements Listener {
